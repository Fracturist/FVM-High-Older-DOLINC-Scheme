#!/bin/bash
cd "${0%/*}" || exit                                # Run from this directory
. ${WM_PROJECT_DIR:?}/bin/tools/RunFunctions        # Tutorial run functions
#------------------------------------------------------------------------------

# settings

    # flag to enable computations in parallel mode
    parallel=true

    # flag to enable reconsturction
    reconstruct=false

    # grid element number yNo*yNo/4
    yNo=256

    # decomposition details
    dMethod=simple
    dNo=4
    dCut="(1 4 1)"

    # spatial scheme
    scheme="UENO3 grad(U) 1.2"
    schemeV="UENO3 grad(U) 1.2"
    schemeTag=$(sed -e 's# #_#g#' -e 's#_grad(.*)##g' <<< "$schemeV")
    schemeLabel=$(sed -e 's# *grad(.*)##g' <<< "$schemeV")

    # simple loop number
    loopNo=10

    # accuracy and converge control of solvers
    accuracy=32
    converge=16

    # start-up time step
    endTime=1.95  # 1.95 1.80
    deltaT=1e-4
    writeInterval=0.01

    # flag to enable adjustable time step
    adjustable=true
    maxCo=0.5

    # number of stored time steps
    purgeNo=0


#------------------------------------------------------------------------------

set -e

canCompile || exit 0    # Dynamic code

restore0Dir

# Change mesh resolution
sed -i "s/\(^yNo[ \t]*\).*;$/\1${yNo};/g" system/blockMeshDict

# Set parallel decomposition
sed -i "s/\(^numberOfSubdomains[ \t]*\).*;$/\1$dNo;/g" system/decomposeParDict
sed -i "s/\(^method[ \t]*\).*;$/\1$dMethod;/g" system/decomposeParDict
sed -i "s/\(^    n[ \t]*\).*;$/\1$dCut;/g" system/decomposeParDict

# Set scheme
sed -i "s/\(^    scheme[ \t]\+\).*;$/\1$scheme;/g" system/fvSchemes
sed -i "s/\(^    schemeV[ \t]\+\).*;$/\1$schemeV;/g" system/fvSchemes

# Set total loop number per time step
sed -i "s/\(^    nOuterCorrectors[ \t]*\).*;$/\1$loopNo;/g" system/fvSolution

# Set converged residual of the linear solver and the simple loop
sed -i "s/\(^accuracy[ \t]*\).*;$/\1$accuracy;/g" system/fvSolution
sed -i "s/\(^converge[ \t]*\).*;$/\1$converge;/g" system/fvSolution

# Set time interval details
sed -i "s/\(^endTime[ \t]*\).*;$/\1$endTime;/g" system/controlDict
sed -i "s/\(^deltaT[ \t]*\).*;$/\1$deltaT;/g" system/controlDict
sed -i "s/\(^writeInterval[ \t]*\).*;$/\1$writeInterval;/g" system/controlDict

# Change time step method
if [ "$adjustable" = true ]
then

    sed -i "s/\(^writeControl[ \t]*\).*;$/\1adjustableRunTime;/g" system/controlDict
    sed -i "s/\(^adjustTimeStep[ \t]*\).*;$/\1yes;/g" system/controlDict

else

    sed -i "s/\(^writeControl[ \t]*\).*;$/\1runTime;/g" system/controlDict
    sed -i "s/\(^adjustTimeStep[ \t]*\).*;$/\1no;/g" system/controlDict

fi
sed -i "s/\(^maxCo[ \t]*\).*;$/\1$maxCo;/g" system/controlDict

# Set the number of stored time stpes
sed -i "s/\(^purgeWrite[ \t]*\).*;$/\1$purgeNo;/g" system/controlDict


runApplication blockMesh

runApplication checkMesh -allGeometry

if [ "$parallel" = true ]
then

    runApplication decomposePar -force

    runParallel $(getApplication)

    if [ "$reconstruct" = true ]
    then
        runApplication reconstructPar
    fi

else

    runApplication $(getApplication)

fi

echo "Done computation"


#------------------------------------------------------------------------------
